apiVersion: apps/v1
kind: Deployment
metadata:
  name: fabrix-backend
  namespace: fabrix
  labels:
    app: fabrix-backend
spec:
  replicas: 2
  selector:
    matchLabels:
      app: fabrix-backend
  template:
    metadata:
      labels:
        app: fabrix-backend
    spec:
      containers:
        - name: fabrix-backend
          image: ${ECR_REPOSITORY}/fabrix-backend:latest
          imagePullPolicy: Always
          ports:
            - containerPort: 3000
              name: http
          env:
            - name: PORT
              value: "3000"
            - name: NODE_ENV
              value: "production"
            - name: MONGODB_URI
              valueFrom:
                secretKeyRef:
                  name: mongodb-credentials
                  key: uri
            - name: AWS_REGION
              value: "us-east-1"
            - name: S3_UPLOADS_BUCKET
              value: "${S3_UPLOADS_BUCKET}"
            - name: COGNITO_USER_POOL_ID
              value: "${COGNITO_USER_POOL_ID}"
            - name: COGNITO_CLIENT_ID
              value: "${COGNITO_CLIENT_ID}"
            - name: STRIPE_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: external-api-keys
                  key: stripe-secret-key
            - name: STRIPE_WEBHOOK_SECRET
              valueFrom:
                secretKeyRef:
                  name: external-api-keys
                  key: stripe-webhook-secret
            - name: STABILITY_AI_API_KEY
              valueFrom:
                secretKeyRef:
                  name: external-api-keys
                  key: stability-ai-api-key
            - name: GOOGLE_AI_API_KEY
              valueFrom:
                secretKeyRef:
                  name: external-api-keys
                  key: gemini-api-key
            - name: EMAIL_FROM
              value: "noreply@${DOMAIN_NAME}"
            - name: SENDGRID_API_KEY
              valueFrom:
                secretKeyRef:
                  name: external-api-keys
                  key: sendgrid-api-key
          livenessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 15
            periodSeconds: 5
          resources:
            limits:
              cpu: 500m
              memory: 512Mi
            requests:
              cpu: 250m
              memory: 256Mi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: fabrix-frontend
  namespace: fabrix
  labels:
    app: fabrix-frontend
spec:
  replicas: 2
  selector:
    matchLabels:
      app: fabrix-frontend
  template:
    metadata:
      labels:
        app: fabrix-frontend
    spec:
      containers:
        - name: fabrix-frontend
          image: ${ECR_REPOSITORY}/fabrix-frontend:latest
          imagePullPolicy: Always
          ports:
            - containerPort: 80
              name: http
          livenessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 15
            periodSeconds: 5
          resources:
            limits:
              cpu: 300m
              memory: 256Mi
            requests:
              cpu: 100m
              memory: 128Mi
---
apiVersion: v1
kind: Service
metadata:
  name: fabrix-backend
  namespace: fabrix
  labels:
    app: fabrix-backend
spec:
  ports:
    - port: 80
      targetPort: 3000
      protocol: TCP
      name: http
  selector:
    app: fabrix-backend
---
apiVersion: v1
kind: Service
metadata:
  name: fabrix-frontend
  namespace: fabrix
  labels:
    app: fabrix-frontend
spec:
  ports:
    - port: 80
      targetPort: 80
      protocol: TCP
      name: http
  selector:
    app: fabrix-frontend
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: fabrix-ingress
  namespace: fabrix
  annotations:
    kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS": 443}]'
    alb.ingress.kubernetes.io/ssl-redirect: '443'
    alb.ingress.kubernetes.io/certificate-arn: ${CERTIFICATE_ARN}
spec:
  rules:
    - host: ${DOMAIN_NAME}
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: fabrix-frontend
                port:
                  number: 80
    - host: api.${DOMAIN_NAME}
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: fabrix-backend
                port:
                  number: 80